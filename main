import pygame, sys, random
import button


def solo_ball_animation():
    global ball_speed_x, ball_speed_y, player_score, opponent_score, score_time
    ball.x += ball_speed_x
    ball.y += ball_speed_y

    if ball.top <= 0 or ball.bottom >= screen_height:
        pygame.mixer.Sound.play(pong_sound)
        ball_speed_y *= -1
    if ball.left <= 0:
        pygame.mixer.Sound.play(score_sound)
        player_score += 1
        if player_score == 5:
            Game.win()
        score_time = pygame.time.get_ticks()
    if ball.right >= screen_width:
        pygame.mixer.Sound.play(score_sound)
        opponent_score += 1
        if opponent_score == 5:
            Game.lose()
        score_time = pygame.time.get_ticks()

    if ball.colliderect(player) or ball.colliderect(opponent):
        pygame.mixer.Sound.play(pong_sound)
        ball_speed_x *= -1


def duo_ball_animation():
    global ball_speed_x, ball_speed_y, player_score, opponent_score, score_time
    ball.x += ball_speed_x
    ball.y += ball_speed_y

    if ball.top <= 0 or ball.bottom >= screen_height:
        pygame.mixer.Sound.play(pong_sound)
        ball_speed_y *= -1
    if ball.left <= 0:
        pygame.mixer.Sound.play(score_sound)
        player_score += 1
        if player_score == 5:
            Game.win()
        score_time = pygame.time.get_ticks()
    if ball.right >= screen_width:
        pygame.mixer.Sound.play(score_sound)
        opponent_score += 1
        if opponent_score == 5:
            Game.lose()
        score_time = pygame.time.get_ticks()

    if ball.colliderect(player) or ball.colliderect(duo_opponent):
        pygame.mixer.Sound.play(pong_sound)
        ball_speed_x *= -1


def player_animation():
    global player_speed
    player.y += player_speed
    if player.top <= 0:
        player.top = 0
    if player.bottom >= screen_height:
        player.bottom = screen_height


def solo_opponent_animation():
    if opponent.top < ball.y:
        opponent.top += opponent_speed
    if opponent.bottom > ball.y:
        opponent.bottom -= opponent_speed
    if opponent.top <= 0:
        opponent.top = 0
    if opponent.bottom >= screen_height:
        opponent.bottom = screen_height


def duo_opponent_animation():
    global duo_opponent_speed
    duo_opponent.y += duo_opponent_speed
    if duo_opponent.top <= 0:
        duo_opponent.top = 0
    if duo_opponent.bottom >= screen_height:
        duo_opponent.bottom = screen_height


def ball_restart():
    global ball_speed_x, ball_speed_y, score_time

    current_time = pygame.time.get_ticks()
    ball.center = (screen_width / 2, screen_height / 2)

    if current_time - score_time < 700:
        number_three = game_font.render("3", False, black)
        screen.blit(number_three, (screen_width / 2 - 10, screen_height / 2 + 20))
    if 700 < current_time - score_time < 1400:
        number_two = game_font.render("2", False, black)
        screen.blit(number_two, (screen_width / 2 - 10, screen_height / 2 + 20))
    if 1400 < current_time - score_time < 2100:
        number_one = game_font.render("1", False, black)
        screen.blit(number_one, (screen_width / 2 - 10, screen_height / 2 + 20))

    if current_time - score_time < 2100:
        ball_speed_x, ball_speed_y = 0, 0
    else:
        ball_speed_y = 6 * random.choice((1, -1))
        ball_speed_x = 6 * random.choice((1, -1))
        score_time = None


pygame.mixer.pre_init(44100, -16, 2, 512)
pygame.init()
clock = pygame.time.Clock()

screen_height = 800
screen_width = 1000
screen = pygame.display.set_mode((screen_width, screen_height))

# initializing variable
pastelyellow = (253, 253, 150)
soloimg = pygame.image.load("Solo.jpg").convert_alpha()
duoimg = pygame.image.load("Duo.jpg").convert_alpha()
quitimg = pygame.image.load("Quit.jpg").convert_alpha()
ball = pygame.Rect(screen_width / 2 - 15, screen_height / 2 - 15, 30, 30)
player = pygame.Rect(screen_width - 20, screen_height / 2 - 70, 10, 140)
opponent = pygame.Rect(10, screen_height / 2 - 70, 10, 140)
duo_opponent = pygame.Rect(10, screen_height / 2 - 70, 10, 140)

ball_speed_x = 6 * random.choice((1, -1))
ball_speed_y = 6 * random.choice((1, -1))
player_speed = 0
opponent_speed = 7
duo_opponent_speed = 0
black = (0, 0, 0)

player_score = 0
opponent_score = 0
game_font = pygame.font.Font("freesansbold.ttf", 32)

score_time = None

# sound animation
pong_sound = pygame.mixer.Sound("mixkit-game-ball-tap-2073.wav")
score_sound = pygame.mixer.Sound("mixkit-instant-win-2021.wav")


class Game:
    def homepage():
        while True:
            screen.fill(pastelyellow)
            pygame.display.set_caption("Home Page")
            solobutton = button.Button(150, 300, soloimg, 0.15)
            duobutton = button.Button(550, 300, duoimg, 0.15)

            if solobutton.draw(screen):
                print("Solo")
                Game.solo()
            if duobutton.draw(screen):
                print("Duo")
                Game.duo()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
            pygame.display.flip()
            clock.tick(60)

    def duo():
        global player_speed, duo_opponent_speed
        while True:
            screen.fill(pastelyellow)
            pygame.display.set_caption("Duo")

            duo_ball_animation()
            player_animation()
            duo_opponent_animation()

            pygame.draw.rect(screen, black, player)
            pygame.draw.rect(screen, black, duo_opponent)
            pygame.draw.ellipse(screen, black, ball)
            pygame.draw.aaline(screen, black, (screen_width / 2, 0), (screen_width / 2, screen_height))

            if score_time:
                ball_restart()

            player_text = game_font.render(f"{player_score}", False, black)
            screen.blit(player_text, (530, 470))

            opponent_text = game_font.render(f"{opponent_score}", False, black)
            screen.blit(opponent_text, (460, 470))

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_DOWN:
                        player_speed += 7
                    if event.key == pygame.K_UP:
                        player_speed -= 7
                    if event.key == pygame.K_s:
                        duo_opponent_speed += 7
                    if event.key == pygame.K_w:
                        duo_opponent_speed -= 7
                    if event.key == pygame.K_LEFT:
                        player_speed += 10
                    if event.key == pygame.K_RIGHT:
                        player_speed -= 10
                    if event.key == pygame.K_d:
                        duo_opponent_speed += 10
                    if event.key == pygame.K_a:
                        duo_opponent_speed -= 10
                if event.type == pygame.KEYUP:
                    if event.key == pygame.K_DOWN:
                        player_speed -= 7
                    if event.key == pygame.K_UP:
                        player_speed += 7
                    if event.key == pygame.K_s:
                        duo_opponent_speed -= 7
                    if event.key == pygame.K_w:
                        duo_opponent_speed += 7
                    if event.key == pygame.K_LEFT:
                        player_speed -= 10
                    if event.key == pygame.K_RIGHT:
                        player_speed += 10
                    if event.key == pygame.K_d:
                        duo_opponent_speed -= 10
                    if event.key == pygame.K_a:
                        duo_opponent_speed += 10

            pygame.display.flip()
            clock.tick(60)

    def solo():
        global player_speed
        while True:
            screen.fill(pastelyellow)
            pygame.display.set_caption("Solo")

            solo_ball_animation()
            player_animation()
            solo_opponent_animation()

            pygame.draw.rect(screen, black, player)
            pygame.draw.rect(screen, black, opponent)
            pygame.draw.ellipse(screen, black, ball)
            pygame.draw.aaline(screen, black, (screen_width / 2, 0), (screen_width / 2, screen_height))

            if score_time:
                ball_restart()

            player_text = game_font.render(f"{player_score}", False, black)
            screen.blit(player_text, (530, 470))

            opponent_text = game_font.render(f"{opponent_score}", False, black)
            screen.blit(opponent_text, (460, 470))

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_DOWN:
                        player_speed += 7
                    if event.key == pygame.K_UP:
                        player_speed -= 7
                    if event.key == pygame.K_LEFT:
                        player_speed += 10
                    if event.key == pygame.K_RIGHT:
                        player_speed -= 10
                if event.type == pygame.KEYUP:
                    if event.key == pygame.K_DOWN:
                        player_speed -= 7
                    if event.key == pygame.K_UP:
                        player_speed += 7
                    if event.key == pygame.K_LEFT:
                        player_speed -= 10
                    if event.key == pygame.K_RIGHT:
                        player_speed += 10

            pygame.display.flip()
            clock.tick(60)

    # final output
    def win():
        while True:
            screen.fill(pastelyellow)
            endtext = game_font.render("Congrats to the player on the right, you won the game!", True, black)
            screen.blit(endtext, (80, 300))
            quit_button = button.Button(400, 500, quitimg, 0.15)
            if quit_button.draw(screen):
                pygame.quit()
                sys.exit()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()

            pygame.display.flip()
            clock.tick(60)

    def lose():
        while True:
            screen.fill(pastelyellow)
            losetext = game_font.render("Congrats to the player on the left, you won the game!", True, black)
            screen.blit(losetext, (80, 300))
            quit_button = button.Button(400, 500, quitimg, 0.15)
            if quit_button.draw(screen):
                pygame.quit()
                sys.exit()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()

            pygame.display.flip()
            clock.tick(60)


Game.homepage()
